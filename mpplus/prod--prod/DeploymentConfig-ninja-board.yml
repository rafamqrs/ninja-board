kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: ninja-board
  namespace: giveback--prod
  labels:
    app.kubernetes.io/part-of: giveback
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    app: ninja-board
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ninja-board
    spec:
      volumes:
        - name: giveback-prod-storage
          persistentVolumeClaim:
            claimName: giveback-prod-storage
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: ninja-board
          env:
            - name: GITHUB_API_TOKEN
              value: SET
            - name: TRELLO_API_TOKEN
              value: SET
            - name: TRELLO_API_KEY
              value: SET
            - name: GITLAB_API_TOKEN
              value: SET
            - name: SMARTSHEETS_API_TOKEN
              value: SET
            - name: GD_CREDENTIALS
              value: SET
            - name: GRAPHS_PROXY
              value: >-
                http://ninja-graphs-giveback--prod.apps.int.spoke.prod.us-east-1.aws.paas.redhat.com/ninja-graphs
            - name: USERS_LDAP_PROVIDER
              value: SET
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
            - containerPort: 8778
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: giveback-prod-storage
              mountPath: /home/jboss
              subPath: target/ninja-persistence
          terminationMessagePolicy: File
          image: 'images.paas.redhat.com/giveback/ninja-board:latest'
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
